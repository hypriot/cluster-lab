#!/usr/bin/env bash

declare DOCKER_INFO

function docker_info(){
  if [[ -z "${DOCKER_INFO}" ]]; then
    DOCKER_INFO=$(docker info 2>/dev/null)
  fi
  echo "$DOCKER_INFO"
}

function pre_check_docker(){
  if [[ $(is_verbose) -eq 0 ]]; then
    echo -e "\nDocker"
  fi
  ERRORS=0

  # instead of checking different package name variants
  # we check for the existence of the docker cli command
  command -v docker > /dev/null 2>&1
  evaluate_result $? "  docker is installed"

  check_if_process_exists "docker"
  evaluate_result $? "  Docker process exists"

  [[ (! -f "/etc/systemd/system/docker.service.cluster-lab-backup") ]]
  evaluate_result $? "  /etc/systemd/system/docker.service backup file is absent"
}

function post_check_docker(){
  if [[ $(is_verbose) -eq 0 ]]; then
    echo -e "\nDocker"
  fi

  # Variables that use some helper functions
  CLUSTER_NODE_IP="$(get_ip_of_interface "${CLUSTER_INTERFACE}")"
  ESCAPED_CLUSTER_NODE_IP=$(escape_ip_for_regex "${CLUSTER_NODE_IP}")

  check_if_process_exists "docker"
  evaluate_result $? "  Docker is running"

  docker_info | grep -q -E "Cluster\sstore:\sconsul:\/\/${ESCAPED_CLUSTER_NODE_IP}:8500"
  evaluate_result $? "  Docker is configured to use Consul as key-value store"

  docker_info | grep -q -E "Cluster\sadvertise:\s${ESCAPED_CLUSTER_NODE_IP}:2375"
  evaluate_result $? "  Docker is configured to listen via tcp at port 2375"

  netstat --numeric --listening --programs --tcp --inet | grep 'docker' | grep -q -E "${ESCAPED_CLUSTER_NODE_IP}:2375"
  evaluate_result $? "  Docker listens on ${CLUSTER_NODE_IP} via tcp at port 2375 (Docker-Engine)"
}

# Docker-Engine
function configure_docker(){
  if [[ $(is_verbose) -eq 0 ]]; then
    echo -e "\n\e[34mConfigure Docker\e[0m"
  fi

  # create backup of /etc/docker/daemon.json config
  if [[ (! -f "/etc/systemd/system/docker.service") ]]; then
    cp /lib/systemd/system/docker.service /etc/systemd/system/docker.service
  fi

  if [[ (! -f "/etc/systemd/system/docker.service.cluster-lab-backup") ]]; then
    cp /etc/systemd/system/docker.service /etc/systemd/system/docker.service.cluster-lab-backup
  fi

  CLUSTER_NODE_IP="$(get_ip_of_interface "${CLUSTER_INTERFACE}")"
  if [[ $(echo "${CLUSTER_NODE_IP}" | wc -w) -gt 1 ]]; then
    echo -e "Failed to configure Docker:\nGot more than one IP address on ${CLUSTER_INTERFACE}: ${CLUSTER_NODE_IP}.\nFor configuring Docker exactly one IP is needed.\nTrying to rollback Docker and networking configuration."
    reset_docker
    reset_networking
    exit 1
  fi

  if [[ $(is_node_cluster_leader) == 0 ]]; then
    CLUSTER_NODE_ROLE="leader"
  else
    CLUSTER_NODE_ROLE="follower"
  fi

  OPTS="$(eval "echo -e ${DOCKER_OPTS}")"

  sed -i -e \
"s|^ExecStart=/usr/bin/docker daemon.*$|ExecStart=/usr/bin/docker daemon $OPTS|g" \
/etc/systemd/system/docker.service

  systemctl daemon-reload
  systemctl restart docker.service
}

function reset_docker(){
  if [[ $(is_verbose) -eq 0 ]]; then
    echo -e "\n\e[34mReset Docker\e[0m"
  fi

  if [[ -f "/etc/systemd/system/docker.service.cluster-lab-backup" ]]; then
    mv -f /etc/systemd/system/docker.service.cluster-lab-backup /etc/systemd/system/docker.service
    systemctl daemon-reload
    systemctl restart docker.service
  fi
}
